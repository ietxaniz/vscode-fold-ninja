{
  "name": "fold-ninja",
  "displayName": "Fold Ninja",
  "description": "Fold Ninja is a Visual Studio Code extension that enhances code readability by automatically folding comments and verbose sections in various programming languages. It features specialized functionality for Golang error handling and supports a multitude of languages including TypeScript, JavaScript, C++, C#, Rust, and Python. This extension aims to streamline the code review process and improve focus by decluttering the code view.",
  "version": "0.4.5",
  "publisher": "ietxaniz",
  "icon": "doc/fold-ninja.png",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "fold",
    "go fold",
    "code folding",
    "golang",
    "code review",
    "readability"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": [
      {
        "type": "object",
        "title": "Fold Ninja",
        "properties": {
          "fold-ninja.maxNumberOfBytes": {
            "type": "number",
            "default": 1000000,
            "description": "Sets the upper limit on file size, in bytes, for which fold-ninja will perform folding calculations."
          },
          "fold-ninja.foldSelection": {
            "type": "boolean",
            "default": false,
            "description": "Determines whether a text region, if it partially matches the window's selection, should be allowed to fold."
          },
          "fold-ninja.go-folded": {
            "type": "string",
            "default": "comment,err,import,decl",
            "description": "Specifies comma separated tags (e.g., 'first-comment', 'comment', 'err', 'import', 'decl', 'func) in Go language files that will be folded in compact mode."
          },
          "fold-ninja.go-intermediate-folded": {
            "type": "string",
            "default": "first-comment,err",
            "description": "Specifies comma separated tags (e.g., 'first-comment', 'comment', 'err', 'import', 'decl', 'func') in Go language files that will be folded in intermediate mode."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "fold-ninja.showMenuOptions",
        "title": "fold ninja: show menu options"
      }
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ietxaniz/vscode-fold-ninja"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack && cp tree-sitter.wasm dist/",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map && cp tree-sitter.wasm dist/",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "copy-webpack-plugin": "^12.0.2",
    "eslint": "^8.56.0",
    "tree-sitter-c": "^0.20.7",
    "tree-sitter-cli": "^0.20.8",
    "tree-sitter-go": "^0.20.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "web-tree-sitter": "^0.20.8",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  }
}
